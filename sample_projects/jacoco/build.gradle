apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'gradle-execfork-plugin'

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath "com.github.psxpaul:gradle-execfork-plugin:$pluginVersion"
  }
}

task workerTask(dependsOn: 'startDaemon') {
  doLast {
    sleep(1000)
    assert file("$buildDir/daemon.log").text.contains("PING") == true
  }
}

task startDaemon(type: com.github.psxpaul.task.JavaExecFork, dependsOn: 'classes') {
  classpath = sourceSets.main.runtimeClasspath
  main = 'com.github.psxpaul.example.Main'
  standardOutput = layout.buildDirectory.file("daemon.log")
  waitForOutput = 'PING'
  stopAfter = workerTask
  jacoco.applyTo(it)
}
startDaemon.mustRunAfter('jar', 'test')

task daemonCodeCoverageReport(type: JacocoReport) {
  executionData startDaemon.jacoco.destinationFile
  classDirectories.setFrom(sourceSets.main.runtimeClasspath)
  sourceSets sourceSets.main
  reports.xml.required = true
  reports.html.required = false
}
daemonCodeCoverageReport.mustRunAfter stopDaemon
workerTask.finalizedBy daemonCodeCoverageReport


task verify(dependsOn: 'daemonCodeCoverageReport') {
  doLast {
    assert file("$buildDir/reports/jacoco/daemonCodeCoverageReport/daemonCodeCoverageReport.xml").text.contains('<line nr="5"')
  }
}

build.dependsOn workerTask
build.dependsOn verify